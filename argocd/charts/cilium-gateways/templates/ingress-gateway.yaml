---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: Gateway
metadata:
  name: {{ .Values.appName }}
spec:
  gatewayClassName: cilium
  listeners:
  - name: http-listener
    protocol: HTTP
    port: {{ .Values.http.frontend.port }}
    #hostname: {{ .Values.fqdn }}
    allowedRoutes:
      namespaces:
        from: Same
  - name: tls-listener
    protocol: TLS
    port: {{ .Values.tls.frontend.port }}
    #hostname: {{ .Values.fqdn }}
    tls:
      mode: Passthrough                       # Allow end-to-end TLS (Gateway does not terminate)
    allowedRoutes:
      namespaces:
        from: Same
---
apiVersion: gateway.networking.k8s.io/v1beta1
kind: HTTPRoute
metadata:
  name: {{ .Values.appName }}
spec:
#  hostnames:
#  - {{ .Values.fqdn }}                    # must match Gateway.listener.hostname
  parentRefs:
  - name: {{ .Values.appName }}                  # same name/namespace as the Gateway above
    sectionName: http-listener             # (selects the HTTP listener by name)
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /
    backendRefs:
    - name: {{ .Values.serviceName }}      # ArgoCD Server service in the specified namespace
      port: {{ .Values.backend.http.port }}
---
{{- if .Values.backend.tls.enabled }}
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: {{ .Values.appName }}
spec:
#  hostnames:
#  - {{ .Values.fqdn }}
  parentRefs:
  - name: {{ .Values.appName }}
    sectionName: tls-listener              # refers to the TLS listener on the Gateway
  rules:
  - backendRefs:
    - name: {{ .Values.serviceName }}      # ArgoCD Server service in the specified namespace
      port: {{ .Values.tls.backend.port }}
---
{{- end }}
apiVersion: "cilium.io/v2alpha1"
kind: CiliumL2AnnouncementPolicy
metadata:
  name: {{ .Values.appName }}
  namespace: kube-system
spec:
  serviceSelector:
    matchLabels:
      io.cilium.gateway/owning-gateway: {{ .Values.appName }}
  externalIPs: true
  loadBalancerIPs: true
